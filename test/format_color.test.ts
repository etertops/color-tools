import { formatColor } from '../src/utils'

// console.log(process.argv, process.argv.length)

test('获取版本值：', () => {
  expect(formatColor('#')).toBe('#000000')
  expect(formatColor('#a')).toBe('#aa0000')
  expect(formatColor('#ab')).toBe('#aabb00')
  expect(formatColor('#abc')).toBe('#aabbcc')
  expect(formatColor('#abcd')).toBe('#aabbccdd')
  expect(formatColor('#abcde')).toBe('#aabbccde')
  expect(formatColor('#abcdef')).toBe('#abcdef')
  expect(formatColor('#abcdet')).toBe('#aabbccde')
  expect(formatColor('#abcdefa')).toBe('#abcdefaa')
  expect(formatColor('#abcdefab')).toBe('#abcdefab')
  expect(formatColor('#abcdefabc')).toBe('#abcdefab')
  expect(formatColor('#abcdefabcd')).toBe('#abcdefab')
  expect(formatColor('#abcdefffcd')).toBe('#abcdef')
  expect(formatColor('rgb(23 , 88 , 188 )')).toBe('rgb(23, 88, 188)')
  expect(formatColor('rgb(23, 88, 188, 0.6)')).toBe('rgba(23, 88, 188, 0.6)')
  expect(formatColor('rgb(23  88  188 )')).toBe('rgb(23, 88, 188)')
  expect(formatColor('rgb(23  88  18 8 )')).toBe('rgb(23, 88, 18)')
  expect(formatColor('rgb(23  88  18 80% )')).toBe('rgba(23, 88, 18, 0.8)')
  expect(formatColor('rgb(23  88  18 80 % )')).toBe('rgb(23, 88, 18)')
  expect(formatColor('rgb(23  88  18% 80 )')).toBe('rgb(23, 88, 18)')
  expect(formatColor('rgba(23 , 88 , 18 )')).toBe('rgb(23, 88, 18)')
  expect(formatColor('rgba(23, 88, 18, 80% )')).toBe('rgba(23, 88, 18, 0.8)')
  expect(formatColor('rgba(23, 88, 18, 100% )')).toBe('rgb(23, 88, 18)')
  expect(formatColor('hsl(23, 88, 18, 100% )')).toBe('hsl(23, 88%, 18%)')
  expect(formatColor('hsl(23, 88, 18, 90% )')).toBe('hsla(23, 88%, 18%, 0.9)')
  expect(formatColor('hsl(23, 88, 18, 90 )')).toBe('hsl(23, 88%, 18%)')
  expect(formatColor('hsl(23, 88, 18, 0.90 )')).toBe('hsla(23, 88%, 18%, 0.9)')
  expect(formatColor('hsl(23, 88, 18, 0.92222222 )')).toBe('hsla(23, 88%, 18%, 0.92222222)')
  expect(formatColor('hsla(23, 88, 18, 0.92 )')).toBe('hsla(23, 88%, 18%, 0.92)')
  expect(formatColor('hsla(23, 88, 18, 1 )')).toBe('hsl(23, 88%, 18%)')
  expect(formatColor('hsla(23, 88, 18, 90% )')).toBe('hsla(23, 88%, 18%, 0.9)')
  expect(formatColor('hsla(23, 88, 18 )')).toBe('hsl(23, 88%, 18%)')
  expect(formatColor('hsv(23, 88, 18, 100% )')).toBe('hsv(23, 88%, 18%)')
  expect(formatColor('hsv(23, 88, 18, 90% )')).toBe('hsva(23, 88%, 18%, 0.9)')
  expect(formatColor('hsv(23, 88, 18, 90 )')).toBe('hsv(23, 88%, 18%)')
  expect(formatColor('hsv(23, 88, 18, 0.90 )')).toBe('hsva(23, 88%, 18%, 0.9)')
  expect(formatColor('hsv(23, 88, 18, 0.92222222 )')).toBe('hsva(23, 88%, 18%, 0.92222222)')
  expect(formatColor('hsva(23, 88, 18, 0.92 )')).toBe('hsva(23, 88%, 18%, 0.92)')
  expect(formatColor('hsva(23, 88, 18, 1 )')).toBe('hsv(23, 88%, 18%)')
  expect(formatColor('hsva(23, 88, 18, 90% )')).toBe('hsva(23, 88%, 18%, 0.9)')
  expect(formatColor('hsva(23, 88, 18 )')).toBe('hsv(23, 88%, 18%)')
})
