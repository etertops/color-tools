import { IColor, IHsl, IHsv } from './interface';
export declare const getColorType: (color: string) => string;
export declare const fmtVal: (value?: number, max?: number) => number;
export declare const fmtInt: (value: number, max?: number) => number;
export declare const prsFltInt: (value: string, max?: number, def?: number) => number;
export declare const prsAlpha: (alpha: string, def?: number) => number | undefined;
export declare const hex2num: (hex: string | number | undefined | null) => number;
export declare const num2hex: (num: number) => string;
export declare const hexPct: (hex: string | undefined | null) => number;
export declare const pctHex: (pct: number) => string;
export declare const isColor: (color: string, type?: string) => boolean;
export declare const formatHex: (color: string) => string;
export declare const formatRgba: (color: string) => string;
export declare const formatHsla: (color: string) => string;
export declare const formatHsva: (color: string) => string;
export declare const formatColor: (color: string) => string;
export declare const getColorMap: (color: string) => IColor | IHsl | IHsv;
export declare const getRgbaMap: (color: string) => IColor;
export declare const callback: (color: string, fn: (map: IColor) => void, errorValue?: any) => any;
export declare const callback2: (color: string, fn: (map: IColor) => void, bgColor?: string, errorValue?: any) => any;
export declare const contains: (object: {
    [key: string]: any;
}, keys: string[]) => boolean;
